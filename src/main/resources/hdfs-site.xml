<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<configuration>
    <!--指定hdfs的nameservice为master,需要和core-site.xml中的保持一致 -->
    <property>
        <name>dfs.nameservices</name>
        <value>hbi</value>
    </property>
    <!-- master下面有两个NameNode,分别是master01,master02 -->
    <property>
        <name>dfs.ha.namenodes.hbi</name>
        <value>master01,master02</value>
    </property>
    <!-- master01的RPC通信地址 -->
    <property>
        <name>dfs.namenode.rpc-address.hbi.master01</name>
        <value>master01:9000</value>
    </property>
    <!-- master01的http通信地址 -->
    <property>
        <name>dfs.namenode.http-address.hbi.master01</name>
        <value>master01:50070</value>
    </property>
    <!-- master02的RPC通信地址 -->
    <property>
        <name>dfs.namenode.rpc-address.hbi.master02</name>
        <value>master02:9000</value>
    </property>
    <!-- master02的http通信地址 -->
    <property>
        <name>dfs.namenode.http-address.hbi.master02</name>
        <value>master02:50070</value>
    </property>
    <!--namenode存放元数据和日志位置-->
    <property>
        <name>dfs.namenode.name.dir</name>
        <value>file:/opt/data/hadoop/name</value>
    </property>
    <!-- 指定NameNode的元数据在JournalNode上的存放位置 -->
    <property>
        <name>dfs.namenode.shared.edits.dir</name>
        <value>qjournal://slave01:8485;slave02:8485;slave03:8485;slave04:8485;slave05:8485;slave06:8485/hbi</value>
    </property>
    <!-- 指定JournalNode在本地磁盘存放数据的位置 -->
    <property>
        <name>dfs.journalnode.edits.dir</name>
        <value>/opt/data/hadoop/journal</value>
    </property>
    <!-- 开启NameNode失败自动切换 -->
    <property>
        <name>dfs.ha.automatic-failover.enabled</name>
        <value>true</value>
    </property>
    <!-- 配置失败自动切换实现方式 -->
    <property>
        <name>dfs.client.failover.proxy.provider.hbi</name>
        <value>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider</value>
    </property>
    <!-- 配置隔离机制 -->
    <property>
        <name>dfs.ha.fencing.methods</name>
        <value>sshfence</value>
    </property>
    <!-- 使用隔离机制时需要ssh免登陆 -->
    <property>
        <name>dfs.ha.fencing.ssh.private-key-files</name>
        <value>/root/.ssh/id_rsa</value>
    </property>
</configuration>